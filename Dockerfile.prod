# build frontend
FROM node:22-alpine3.19 AS frontend
WORKDIR /usr/docker/JourniCal/frontend/
COPY frontend/package.json frontend/package-lock.json .
RUN --mount=type=cache,target=~/.npm npm ci
COPY ./frontend/ .
RUN npm run build

# build backend
FROM golang:1.22.4-alpine3.20 AS backend
WORKDIR /usr/docker/JourniCal/backend/
COPY backend/go.mod backend/go.sum .
RUN --mount=type=cache,target=/go/pkg/mod/ go mod download
COPY ./backend/ .
RUN --mount=type=cache,target=/go/pkg/mod/ go build -o ./result -ldflags="-s -w" -trimpath .

# serve with minimal dependency
FROM busybox as runtime
COPY --from=frontend /usr/docker/JourniCal/frontend/dist /usr/docker/JourniCal/prod/static
COPY --from=backend /usr/docker/JourniCal/backend/result /usr/docker/JourniCal/backend/credentials.json /usr/docker/JourniCal/prod/
ENV ECHO_SERVES_FRONTEND_TOO=true
CMD cd /usr/docker/JourniCal/prod && ./result
